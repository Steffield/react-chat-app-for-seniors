{"version":3,"sources":["pages/Chat/Chat.js","pages/Join/Join.js","components/Header/Header.js","components/SideText/SideText.js","components/Messages/Message/Message.js","components/Messages/Messages.js","components/Input/Input.js","App.js","serviceWorker.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","className","htmlFor","placeholder","id","type","onChange","e","target","value","onClick","preventDefault","to","Header","href","SideText","users","handleColorChange","handleFontsizeChange","console","log","for","style","marginLeft","map","i","key","charAt","toUpperCase","slice","Message","message","user","text","isSentByCurrentUser","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Messages","messages","Input","setMessage","sendMessage","label","onKeyPress","Chat","location","setUsers","setMessages","fontSize","setFontSize","colorContrast","setColorContrast","useEffect","body","document","querySelector","header","h2","h3","inst","sideText","sendBtn","chat","height","people","backgroundColor","color","queryString","parse","search","io","emit","error","alert","off","on","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2e88e84a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.scss\";\n\nimport Header from \"../../components/Header/Header\";\nimport SideText from \"../../components/SideText/SideText\";\nimport Messages from \"../../components/Messages/Messages\";\nimport Input from \"../../components/Input/Input\";\n// import WeatherInfo from \"../../components/WeatherInfo/WeatherInfo\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [fontSize, setFontSize] = useState(false);\n  const [colorContrast, setColorContrast] = useState(false);\n\n  const ServerPort = \"localhost:3001\";\n\n  const handleFontsizeChange = () => {\n    fontSize === false ? setFontSize(true) : setFontSize(false);\n    console.log(fontSize);\n  };\n\n  const handleColorChange = () => {\n    colorContrast === false ? setColorContrast(true) : setColorContrast(false);\n    console.log(colorContrast);\n  };\n\n  useEffect(() => {\n    const body = document.querySelector(\"body\");\n    const header = document.querySelector(\".chatBoxTitle\");\n    const h2 = document.querySelector(\"h2\");\n    const h3 = document.querySelector(\"h3\");\n    const inst = document.querySelector(\".instruction\");\n    const sideText = document.querySelector(\".sideText\");\n    const sendBtn = document.querySelector(\".sendButton\");\n    const chat = document.querySelector(\".chatInnerContainer\");\n    if (fontSize === false) {\n      body.style.fontSize = \"1.1em\";\n      header.style.fontSize = \"1.1em\";\n      sideText.style.fontSize = \"1.1em\";\n      h2.style.fontSize = \"24px\";\n      h3.style.fontSize = \"1.3em\";\n      sendBtn.style.fontSize = \"1.1em\";\n      inst.style.fontSize = \"18px\";\n      chat.style.height = \"80%\";\n      sideText.style.height = \"80%\";\n    } else {\n      body.style.fontSize = \"1.5em\";\n      header.style.fontSize = \"1.5em\";\n      sideText.style.fontSize = \"1.5em\";\n      h2.style.fontSize = \"1.3em\";\n      h3.style.fontSize = \"1.3em\";\n      sendBtn.style.fontSize = \"1.5em\";\n      inst.style.fontSize = \"24px\";\n      chat.style.height = \"90%\";\n      sideText.style.height = \"90%\";\n    }\n    console.log(body.style.fontSize);\n  }, [handleFontsizeChange]);\n\n  useEffect(() => {\n    const body = document.querySelector(\"body\");\n    const label = document.querySelector(\".checkbox\");\n    const sideText = document.querySelector(\".sideText\");\n    const sendBtn = document.querySelector(\".sendButton\");\n    const people = document.querySelector(\"ul\");\n\n    if (colorContrast === false) {\n      body.style.backgroundColor = \"#ededed\";\n      body.style.color = \"black\";\n      people.style.color = \"black\";\n      sideText.style.color = \"black\";\n    } else {\n      body.style.backgroundColor = \"black\";\n      body.style.color = \"white\";\n      sideText.style.color = \"white\";\n      people.style.color = \"white\";\n    }\n    console.log(body.style.fontSize);\n  }, [handleColorChange]);\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ServerPort);\n\n    setName(name);\n    setRoom(room);\n\n    console.log(socket);\n\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(\"There has been an error. Please try again!\");\n      }\n    });\n    //unmount or cleanup lifecycle method\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ServerPort, location.search]);\n\n  //useEffect for handling messages\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  console.log(users);\n\n  return (\n    <>\n      <Header room={room} name={name} />\n      {/* <WeatherInfo /> */}\n\n      <div className=\"chatOuterContainer\">\n        <div className=\"chatInnerContainer\">\n          <Messages messages={messages} name={name} />\n          <Input\n            message={message}\n            setMessage={setMessage}\n            sendMessage={sendMessage}\n          />\n        </div>\n        <SideText\n          users={users}\n          handleColorChange={handleColorChange}\n          handleFontsizeChange={handleFontsizeChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Chat;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Join.scss\";\n\nconst Join = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleRoomChange = (e) => {\n    setRoom(e.target.value);\n  };\n\n  return (\n    <div className=\"joinOuterContainer\">\n      <div className=\"joinInnerContainer\">\n        <h1 className=\"heading\">Join a Chatroom</h1>\n        <div>\n          <label htmlFor=\"enterName\" className=\"sr-only\">\n            Enter Your Name\n          </label>\n          <input\n            placeholder=\"Enter Your Name\"\n            id=\"enterName\"\n            className=\"joinInput\"\n            type=\"text\"\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"enterRoom\" className=\"sr-only\">\n            Enter desired chat room\n          </label>\n\n          <input\n            placeholder=\"Enter the Chatroom Number\"\n            id=\"enterRoom\"\n            className=\"joinInput mt-20\"\n            type=\"text\"\n            onChange={handleRoomChange}\n          />\n        </div>\n\n        <Link\n          className=\"joinBtn\"\n          onClick={(e) => (!name || !room ? e.preventDefault() : null)}\n          to={`/chat?name=${name}&room=${room}`}\n        >\n          <button className=\"ui secondary button btn\" type=\"submit\">\n            Start Chatting\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Join;\n","import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = ({ name, room }) => {\n  return (\n    // eslint-disable-next-line no-unused-expressions\n    <div className=\"outerContainer\">\n      <div className=\"headerContainer\">\n        <div className=\"leftHeaderContainer\">\n          <h3 className=\"chatBoxTitle \">\n            <i className=\"user outline icon mr-2\" />\n            {name}, you are online and in chat room: {room}\n          </h3>\n        </div>\n        <div className=\"rightHeaderContainer \">\n          <a href=\"/\">\n            <h3 className=\"chatBoxTitle \">\n              Leave chat room\n              <i className=\"times icon close ml-2\" />\n            </h3>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./SideText.scss\";\n\nconst SideText = ({ users, handleColorChange, handleFontsizeChange }) => {\n  console.log(users);\n\n  // useEffect(() => {\n  //   if (fontSize === false) {\n  //     const body = document.querySelector(\"body\");\n  //   }\n  // }, []);\n\n  return (\n    <>\n      <aside className=\"sideText\">\n        <div>\n          <h2>Welcome to our simple and adjustable chat room!</h2>\n          <h3 className=\"instruction\">\n            At the top left you see the name of your chat room and everyone in\n            the chatroom is listed on the bottom right. If you are in the wrong\n            room or want to exit the chat, click the top right X to leave the\n            chat room. You can increase the font size and contrast below.\n          </h3>\n        </div>\n        <div>\n          <h3>\n            <div className=\"checkbox mt-20 mr-15\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id=\"changeFontSize\"\n                name=\"fontsize\"\n                onChange={handleFontsizeChange}\n              />\n              <label for=\"changeFontSize\" style={{ marginLeft: \"15px\" }}>\n                Increase Front Size\n              </label>\n            </div>\n            <div className=\"checkbox mt-20 mr-15\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id=\"changeContrast\"\n                name=\"contrast\"\n                onChange={handleColorChange}\n              />\n              <label for=\"changeContrast\" style={{ marginLeft: \"15px\" }}>\n                More Color Contrast\n              </label>\n            </div>\n          </h3>\n        </div>\n        {users ? (\n          <div>\n            <h2>The people in this chat room are:</h2>\n            <div className=\"activeContainer\">\n              <ul>\n                {users.map(({ name }, i) => (\n                  <li key={i} className=\"activeItem\">\n                    {name.charAt(0).toUpperCase() + name.slice(1)}\n                    {/* <img alt=\"Online Icon\" src={onlineIcon}/> */}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        ) : (\n          <p>no other users in this chat</p>\n        )}\n      </aside>\n    </>\n  );\n};\n\nexport default SideText;\n","import React from \"react\";\nimport ReactEmoji from \"react-emoji\";\nimport \"./Message.scss\";\n\nconst Message = ({ message: { user, text }, name }) => {\n  let isSentByCurrentUser = false;\n\n  let trimmedName = name.trim().toLowerCase();\n  trimmedName = trimmedName.charAt(0).toUpperCase() + name.slice(1);\n  console.log(name, user);\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  console.log(isSentByCurrentUser);\n\n  return isSentByCurrentUser ? (\n    <div className=\"messageContainer right floated\">\n      <p className=\"sentText pr-10\">{trimmedName}</p>\n      <div className=\"messageBubble bgUser\">\n        <p className=\"messageText\">{ReactEmoji.emojify(text)}</p>\n      </div>\n      {/* <p className=\"subtext\">{time}</p> */}\n    </div>\n  ) : (\n    <div className=\"messageContainer justifyStart left floated\">\n      <div\n        className={`messageBubble bgOtherUser ${\n          user === \"admin\" ? \"adminBubble\" : \"\"\n        }`}\n      >\n        <p className=\"messageText\">{ReactEmoji.emojify(text)}</p>\n      </div>\n      {/* <p className=\"subtext\">{time}</p> */}\n      <p className=\"sentText pl-10\">{user}</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Message from \"./Message/Message\";\nimport \"./Messages.scss\";\n\nconst Messages = ({ messages, name }) => {\n  return (\n    <ScrollToBottom className=\"messages\">\n      {messages.map((message, i) => (\n        <div key={i}>\n          <Message message={message} name={name} />\n        </div>\n      ))}\n    </ScrollToBottom>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\nimport \"./Input.scss\";\n\nconst Input = ({ message, setMessage, sendMessage }) => {\n  return (\n    // eslint-disable-next-line no-unused-expressions\n    <form className=\"form\">\n      <div className=\"ui fluid action input\">\n        <label for=\"chatInput\" className=\"sr-only\">\n          Type your message here\n        </label>\n        <input\n          className=\"input\"\n          id=\"chatInput\"\n          type=\"text\"\n          label=\"type message here\"\n          placeholder=\"Type a message to the users in the room.\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n        />\n\n        <button\n          className=\"ui secondary button btn sendButton\"\n          onClick={(e) => sendMessage(e)}\n        >\n          <i className=\"paper plane icon mr-2\" />\n          Send\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Join from \"./pages/Join/Join\";\nimport Chat from \"./pages/Chat/Chat\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nconst App = () => (\n  <Router>\n    <Route path=\"/\" exact component={Join} />\n    <Route path=\"/chat\" component={Chat} />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}